plugins {
    id 'java'
    id 'cpp-library'
}

repositories {
    mavenCentral()
}

task generateJniHeaders(type: Javadoc) {
    source = sourceSets.main.allJava
    options.nativeHeader()
    outputs.dir("$buildDir/generated/jni")
}

tasks.register('compileNative', Exec) {
    dependsOn generateJniHeaders
    workingDir 'build/native'
    commandLine 'cmake', '-B', 'build', '-S', 'src/main/cpp', "-DCMAKE_BUILD_TYPE=Release"
    commandLine 'cmake', '--build', 'build', '--config', 'Release'
}

tasks.register('copyNativeLibs', Copy) {
    dependsOn compileNative
    from("build/native/build/lib/") {
        include "*.dll", "*.so", "*.dylib"
    }
    into "src/main/resources/META-INF/native/${getNativePlatform()}"
}

static def getNativePlatform() {
    def os = System.getProperty("os.name").toLowerCase()
    if (os.contains("win")) return "windows"
    if (os.contains("mac")) return "macos"
    return "linux"
}

jar {
    dependsOn copyNativeLibs
    manifest {
        attributes "Main-Class": "com.yourpackage.MyLibrary"
    }
}
